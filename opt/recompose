#!/usr/bin/env bash

# don't fail fast
#set -eu

# Enable job control
set -m

# first argument on the command line is the process to start after
# recomposision is complete
cmd=${1}
echo "******************************************** CMD= $cmd ********************************"
AWS_CMD=/app/vendor/awscli/bin/aws
SFDC_CUSTOM=sfdc-custom.tar.gz

process_slug() {
  local app_release=${1:?}

  echo "--> Processing $app_release"

  local app_release_array=($app_release)
  local app=${app_release_array[0]}
  local release=${app_release_array[1]}

  local slug_id=$(curl --retry 3 -s -n https://api.heroku.com/apps/$app/releases/$release \
    -H "Accept: application/vnd.heroku+json; version=3" | \
    python -c 'import json,sys;obj=json.load(sys.stdin);print obj["slug"]["id"]')

  if [ -n "$slug_id" ]; then
    local slug_url=$(curl --retry 3 -s -n https://api.heroku.com/apps/$app/slugs/$slug_id \
      -H "Accept: application/vnd.heroku+json; version=3" | \
      python -c 'import json,sys;obj=json.load(sys.stdin);print obj["blob"]["url"]')

    if [ -n "$slug_url" ]; then
      echo "--> Downloading slug ${slug_id} for ${app}"
      curl --retry 3 -s -L "${slug_url}" | \
          tar xzm --strip-components=1 -C . 2>&1 | \
          grep -v "Ignoring unknown extended header keyword"
    else
      echo "! ERROR: could not find slug $slug_id for $app_release"
    fi
  else
    echo "! ERROR: could not find release v${release} for ${app}"
  fi
}


#wait_for_downloads() {
#  local job_count=${1:?}
#  local message=${2:?}
#  for i in $(seq 1 1 $job_count); do fg $((i+1)) > /dev/null 2>&1; done
#  echo $2
#}

[ -z "$HEROKU_API_KEY" ] && echo " ! ERROR: missing HEROKU_API_KEY config var" && exit 1
[ -z "$HEROKU_API_USER" ] && echo " ! ERROR: missing HEROKU_API_USER config var" && exit 1
[ -z "$AWS_ACCESS_KEY_ID" ] && echo " ! ERROR: missing AWS_ACCESS_KEY_ID config var" && exit 1
[ -z "$AWS_SECRET_ACCESS_KEY" ] && echo " ! ERROR: missing AWS_SECRET_ACCESS_KEY config var" && exit 1
[ -z "$AWS_S3_BUCKET_NAME" ] && echo " ! ERROR: missing AWS_S3_BUCKET_NAME config var" && exit 1


# Only start nginx if he WEB_PROCESS_CMD is defined
if [ -f .nginx/bin/nginx-start ] && [ -n "$WEB_PROCESS_CMD" ]; then
  cd .nginx > /dev/null 2>&1
  eval "bin/nginx-start &"
  pid=$!
  cd - > /dev/null 2>&1
  trap "kill -9 $pid; exit" SIGKILL
else
  echo "No .nginx/bin/nginx-start file found!"
fi

# create netrc
cat >> $HOME/.netrc <<EOF
machine api.heroku.com
  login $HEROKU_API_USER
  password $HEROKU_API_KEY
EOF


############ Downloading jdk1.8.0_131_x64,  recomposer.jar #######################################
echo "**** Downloading jdk1.8.0_131_x64 from s3Key:d5eab6c07320844df2961afd84f95df8"
${AWS_CMD:?} s3 cp s3://${AWS_S3_BUCKET_NAME:?}/d5eab6c07320844df2961afd84f95df8 - | tar xzm --strip-components=1 -C . 2>&1
echo "Completed downloading jdk1.8.0_131_x64 from s3Key:d5eab6c07320844df2961afd84f95df8"
echo "**** Downloading recomposer.jar from s3..."
 ${AWS_CMD:?} s3 cp s3://${AWS_S3_BUCKET_NAME:?}/recompose-0.0.9-SNAPSHOT.jar recomposer.jar 2>&1
###################################################################################################



rm $HOME/.netrc

echo "Invoke Java Recomposer"
echo $JAVA_HOME
echo `which java`
java -jar recomposer.jar
echo "Java Recomposer Completed"

echo "Downloading sfdc customizations from s3..."
${AWS_CMD:?} s3 cp s3://${AWS_S3_BUCKET_NAME:?}/${SFDC_CUSTOM:?} - | tar xzmv 2>&1


echo "true" > $HOME/.recompose

if [ -n "$cmd" ]; then
  echo "--> cmd: ${cmd}"
  exec bash ${cmd:?}
fi

echo "--> $0 exiting"
